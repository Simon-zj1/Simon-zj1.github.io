<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Simon&#39;s world</title>
  
  
  <link href="https://www.simon-zj.top/atom.xml" rel="self"/>
  
  <link href="https://www.simon-zj.top/"/>
  <updated>2025-05-16T08:28:44.198Z</updated>
  <id>https://www.simon-zj.top/</id>
  
  <author>
    <name>Simon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>🕊️A Thousand-Year Bird Odyssey：From Myth to Science</title>
    <link href="https://www.simon-zj.top/posts/0"/>
    <id>https://www.simon-zj.top/posts/0</id>
    <published>2025-05-16T09:12:12.000Z</published>
    <updated>2025-05-16T08:28:44.198Z</updated>
    
    <content type="html"><![CDATA[<h1 id="🕊️-A-Thousand-Year-Bird-Odyssey-From-Myth-to-Science"><a href="#🕊️-A-Thousand-Year-Bird-Odyssey-From-Myth-to-Science" class="headerlink" title="🕊️ A Thousand-Year Bird Odyssey: From Myth to Science"></a>🕊️ A Thousand-Year Bird Odyssey: From Myth to Science</h1><p>Have you ever wondered…<br><strong>Where do birds go in winter when they suddenly disappear?</strong></p><blockquote><p>“Swallows might hibernate in rock crevices.”<br>— Aristotle  </p></blockquote><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/KnowledgeRoaming/BirdRock.png","alt":"","title":""}]</div>  </div><blockquote><p>🌓 “They probably fly to the moon!”<br>— A Medieval cleric’s notes</p></blockquote><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/KnowledgeRoaming/moon.png","alt":"","title":""}]</div>  </div><hr><h2 id="🌍-The-Moment-That-Shocked-the-World"><a href="#🌍-The-Moment-That-Shocked-the-World" class="headerlink" title="🌍 The Moment That Shocked the World"></a>🌍 The Moment That Shocked the World</h2><p>📜 <strong>In 1822</strong>, a German hunter discovered a <strong>white stork</strong> returning in spring —<br>embedded in its body was a <strong>wooden spear from Africa</strong>.</p><p>This moment <strong>stunned the scientific world</strong>:<br><strong>Birds truly could migrate across continents.</strong></p><hr><h2 id="📡-Human-Curiosity-Meets-Scientific-Progress"><a href="#📡-Human-Curiosity-Meets-Scientific-Progress" class="headerlink" title="📡 Human Curiosity Meets Scientific Progress"></a>📡 Human Curiosity Meets Scientific Progress</h2><p>From then on, scientists began tracing their flight with growing precision:</p><ul><li>🪶 <strong>Late 19th century</strong>: Metal bands on bird legs to log their paths  </li><li>📻 <strong>Mid 20th century</strong>: Radar and radio transmitters joined the effort  </li><li>🛰️ <strong>Early 21st century</strong>: GPS and satellites track migration in real time</li></ul><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/KnowledgeRoaming/Science.png","alt":"","title":""}]</div>  </div><hr><h2 id="🐦-The-Record-Breaking-Flight-of-Godwit-E7"><a href="#🐦-The-Record-Breaking-Flight-of-Godwit-E7" class="headerlink" title="🐦 The Record-Breaking Flight of Godwit E7"></a>🐦 The Record-Breaking Flight of Godwit E7</h2><p>📅 <strong>In 2007</strong>, a bar-tailed godwit tagged <strong>E7</strong> took off from Alaska.<br>Without landing, eating, or resting, it flew over <strong>11,000 kilometers</strong><br>nonstop until it reached <strong>New Zealand</strong>.</p><blockquote><p>⚡ The world held its breath in awe.</p></blockquote><hr><h2 id="📲-You-Can-Be-a-“Bird-Detective”-Too"><a href="#📲-You-Can-Be-a-“Bird-Detective”-Too" class="headerlink" title="📲 You Can Be a “Bird Detective” Too!"></a>📲 You Can Be a “Bird Detective” Too!</h2><p>All you need to do is:</p><ol><li>Open your phone  </li><li>Download and register on <a href="https://ebird.org/"><strong>eBird</strong></a>  </li><li>Log every bird you observe</li></ol><p>You could be contributing <strong>key migration data</strong> for scientists worldwide!</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/KnowledgeRoaming/eBird.png","alt":"","title":""}]</div>  </div><hr><h2 id="✨-A-Knowledge-Roaming-from-Myth-to-Science"><a href="#✨-A-Knowledge-Roaming-from-Myth-to-Science" class="headerlink" title="✨ A Knowledge Roaming from Myth to Science"></a>✨ A Knowledge Roaming from Myth to Science</h2><p>From hiding in rocks to circling the Earth,<br>from Aristotle’s guess to GPS precision,<br>this is a <strong>thousand-year journey of knowledge</strong>,<br>a deep and enduring pursuit between <strong>humanity and nature</strong>.</p><hr><blockquote><p>⛰️ <strong>Myths may begin the story — but science gives it wings.</strong></p></blockquote><p>📌 <em>Written in the spring of 2025, just as a bird soared across the sky.</em></p>]]></content>
    
    
    <summary type="html">A thousand-year knowledge journey, tracing migratory birds from myth to science — now with you in it.</summary>
    
    
    
    <category term="Knowledge Roaming" scheme="https://www.simon-zj.top/categories/Knowledge-Roaming/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github个人网站搭建保姆级教程（Mac）</title>
    <link href="https://www.simon-zj.top/posts/5ec7e920"/>
    <id>https://www.simon-zj.top/posts/5ec7e920</id>
    <published>2025-05-01T16:00:00.000Z</published>
    <updated>2025-05-16T07:13:49.701Z</updated>
    
    <content type="html"><![CDATA[<p>前言：本教程是基于<a href="https://jinjy-03.github.io/2022/09/01/%E9%87%91%E9%87%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/">金金</a>的文章内容，记录本人从零开始学习搭建个人网站的过程，希望能帮助到大家，如果有什么问题，欢迎评论区留言。</p><p>搭建设备：MacBook M1 Pro</p><h2 id="博客环境搭建"><a href="#博客环境搭建" class="headerlink" title="博客环境搭建"></a>博客环境搭建</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo本身是一个使用Node.js编写的工具，它的核心功能是生成静态网页、渲染Markdown以及调用不同主题等，而这些主要核心功能的实现依赖于Node.js运行环境。<br>首先我们进入<a href="https://nodejs.org/en/download/">Node.js官网</a>下载Node.js安装包。官网给出下面两种安装方法，一种是终端安装，另一种是下载安装包，根据个人习惯下载即可。下载安装包的话需要注意选择好适合自己电脑版本的安装包，下载后一直点安装就可以了。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/Nodejs.jpg","alt":"","title":""}]</div>  </div><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>安装Node.js的时候一般会自动安装npm，npm(Node Package Manager)是Node包管理器，可以用来安装库、卸载插件、更新依赖、运行脚本等。检查一下Node.js和npm是否安装成功，在Mac终端输入下面命令，可以查看Node.js和npm的版本号。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ node -v <span class="comment"># 查看刚刚安装的Node.js版本</span></span><br><span class="line">$ npm -v <span class="comment"># 查看npm版本</span></span><br></pre></td></tr></table></figure><p>出现类似下图版本号，说明安装成功，如果有报错信息可以评论区留言。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/node-v.jpg","alt":"","title":""}]</div>  </div><p>由于通过Node.js安装的npm默认连接国外服务器，在中国访问速度很慢，因此我们可以借助淘宝镜像源来加速npm的下载速度，下载镜像源的命令如下。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org  </span><br></pre></td></tr></table></figure><p>然后再次检查一下npm的版本号，出现类似下图版本号，说明安装成功，如果有报错信息可以评论区留言。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cnpm -v <span class="comment"># 查看刚刚安装的cnpm版本</span></span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/cnpm.jpg","alt":"","title":""}]</div>  </div><p>接下来，我们安装Hexo框架，在终端输入下面命令，可以安装Hexo框架。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cnpm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>同样检查一下Hexo的版本号，出现类似下图版本号，说明安装成功，如果有报错信息可以评论区留言。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo -v <span class="comment"># 查看刚刚安装的Hexo版本</span></span><br></pre></td></tr></table></figure><p>出现类似下图版本号，说明安装成功.</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/hexo-cli.jpg","alt":"","title":""}]</div>  </div><h2 id="使用Hexo搭建个人博客"><a href="#使用Hexo搭建个人博客" class="headerlink" title="使用Hexo搭建个人博客"></a>使用Hexo搭建个人博客</h2><p>前言：环境搭建好后，我们可以开始使用Hexo来搭建个人网站了。<br>建议：可以创建一个文件夹，把接下来搭建过程中的文件都放在里面，如果搭建过程出现错误也无需担心，直接删掉文件夹，从头来过。<br>下面是在创建和管理博客过程中常用的指令，建议记一下，方便后续使用。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span> <span class="comment"># 查看当前工作目录</span></span><br><span class="line">$ <span class="built_in">cd</span>./.. <span class="comment"># 返回上一级目录</span></span><br><span class="line">$ hexo init blog <span class="comment"># 初始化博客</span></span><br><span class="line">$ <span class="built_in">mkdir</span> xxx <span class="comment"># 创建xxx文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> xxx <span class="comment"># 进入xxx文件夹</span></span><br><span class="line">$ hexo clean <span class="comment"># 清除缓存,经常用到，每次对主题文件做修改的时候需要清除缓存   </span></span><br><span class="line">$ hexo g <span class="comment"># 生成静态文件</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br><span class="line">$ hexo d <span class="comment"># 部署到github</span></span><br></pre></td></tr></table></figure><h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><p>我们先创建一个文件夹，在终端输入下面命令。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> hexo1 <span class="comment"># 创建一个名为hexo1文件夹</span></span><br></pre></td></tr></table></figure><p>接下来，我们进入hexo1文件夹。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo1</span><br></pre></td></tr></table></figure><p>查看当前工作目录。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/mkdir.jpg","alt":"","title":""}]</div>  </div><p>接下来，我们初始化博客，在终端输入下面命令.</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>初始化成功会在终端显示下面信息。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Start blogging with Hexo!&quot;</span></span><br></pre></td></tr></table></figure><p>查看一下hexo1文件夹生成了哪些文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ls.png","alt":"","title":""}]</div>  </div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ls-l.jpg","alt":"","title":""}]</div>  </div><p>接下来我们启动本地博客服务，查看你搭建的网站是否可以正常访问。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>将终端中输出的下面信息中的<a href="http://localhost:4000/%E5%A4%8D%E5%88%B6%E5%88%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E3%80%82">http://localhost:4000/复制到浏览器。</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.&quot;</span></span><br></pre></td></tr></table></figure><p>打开后的页面如下图所示，hexo已经为你创建了一篇叫Hello World的博客啦</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/hexo2.jpg","alt":"","title":""}]</div>  </div><p>在终端使用control+c关闭服务，平时我们可以用hexo s启动预览文章，看修改的内容是否呈现，包括我此时在编辑的教程就是在VScode中编辑.md文件，然后在终端使用hexo s来预览效果，这样修改的内容就可以实时显示在预览中，不用使用hexo clean每次清理，或者每次修改都使用hexo g重新生成，直接在网页端刷新即可。<br><span style="color:red">注意：</span>修改了主题文件或者配置文件，需要清理缓存，重新生成才能生效，不然会出现主题样式和配置文件未生效的情况。</p><h2 id="创建和管理博客"><a href="#创建和管理博客" class="headerlink" title="创建和管理博客"></a>创建和管理博客</h2><p>常用的hexo指令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;xxx&quot;</span> <span class="comment"># 新建一篇名叫xxx的博客</span></span><br><span class="line">$ hexo g <span class="comment"># 生成静态文件</span></span><br><span class="line">$ hexo d <span class="comment"># 部署到github</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br><span class="line">$ hexo clean <span class="comment"># 清除缓存</span></span><br></pre></td></tr></table></figure><h3 id="新建一篇博客"><a href="#新建一篇博客" class="headerlink" title="新建一篇博客"></a>新建一篇博客</h3><p>使用下面命令创建一篇博客。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n <span class="string">&quot;new post&quot;</span></span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/hexo3.jpg","alt":"","title":""}]</div>  </div><p>我们进入终端输出的文件夹地址，可以看到刚刚创建的博客和系统自己生成的一篇.md文件</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/hexo4.png","alt":"","title":""}]</div>  </div><h3 id="编辑博客"><a href="#编辑博客" class="headerlink" title="编辑博客"></a>编辑博客</h3><p>我们在终端进入到刚刚的博客文件夹，使用下面命令编辑刚刚创建的博客。（当然也可以一步到位，直接在终端输入”vim .&#x2F;source&#x2F;_posts&#x2F;new-post.md”）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ./source/_posts <span class="comment"># 进入_posts文件夹</span></span><br><span class="line">$ <span class="built_in">pwd</span> <span class="comment"># 查看当前工作目录</span></span><br><span class="line">$ vim new-post.md <span class="comment"># 编辑刚刚创建的博客</span></span><br></pre></td></tr></table></figure><p>vim是一个文本编辑器，可以用来编辑.md文件,当我们在终端输入”vim new-post.md”时，会打开vim编辑器，编辑刚刚创建的博客。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/vim.png","alt":"","title":""}]</div>  </div><p><span style="color:red">提示：</span>我们可以在vim编辑器中编辑文本内容，同样.md文件我们也可以用其他模式编辑，比如Vscode和系统自带的文本编辑器等，根据个人喜欢自己选择即可。<br>在使用vim编辑博客时,下面是一些常用的操作。<br>1、进入insert模式，即编辑模式。这里有好几种方法，比如在英文输入法模式下，输入“i”或者“o”等都可以进入insert模式，他们会有一点区别，比如是在光标当前位置插入还是换行插入等，可自行查阅。<br>2、退出insert模式，按下ESC键，此时无法编辑，直接退出vim的话输入”：q”，保存退出输入”：wq”。<br><span style="color:red">注意：</span>引号里面的分号是英文输入法下的，是先输入分号，然后输入q或者wq。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/vim2.jpg","alt":"","title":""}]</div>  </div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/vim3.jpg","alt":"","title":""}]</div>  </div><p>在终端输入hexo s重新生成一下，打开网页预览。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/blog.png","alt":"","title":""}]</div>  </div><p>可以看到我们刚刚编辑的内容已经出现在网站上啦！<br>还有很多指令需要小伙伴们自己学习一下，网上资源很多，这里就不多说啦。（其实是偷懒）</p><h2 id="本地博客部署到github"><a href="#本地博客部署到github" class="headerlink" title="本地博客部署到github"></a>本地博客部署到github</h2><p>前言：我们上面的操作都是在本地部署，只能在本机访问,而当我们将其部署到远端（如github pages、Cloudflare Pages等）的时候，可以通过绑定自己的域名，就可以让全球用户访问你的博客了。</p><h3 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h3><p>首先，登录自己的github账号（没有的话需要注册），然后点击左上角的“+”号，点击“New repository”。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/github.jpg","alt":"","title":""}]</div>  </div><p>接下来，创建仓库，需要注意仓库的命名规则，⚠️<span style="color:red">用户名.github.io</span></p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/github2.jpg","alt":"","title":""}]</div>  </div><p>填写完成后，拉到最下面点击“Create repository”即可。</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>到<a href="https://git-scm.com/downloads">git官网</a>下载即可，选择适合自己的版本。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/git.png","alt":"","title":""}]</div>  </div><p>安装成功后，从终端进入到hexo1目录，将下面命令输入到终端。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cnpm install hexo-deployer-git --save <span class="comment"># 安装git插件</span></span><br></pre></td></tr></table></figure><h3 id="添加仓库地址"><a href="#添加仓库地址" class="headerlink" title="添加仓库地址"></a>添加仓库地址</h3><p>成功后，我们需要到hexo的配置文件中添加git的配置。首先找到hexo的根目录，如下图所示.</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/vim4.jpg","alt":"","title":""}]</div>  </div><p>然后输入vim _config.yml，打开配置文件，按照下面内容进行修改。其中修改的内容需要复制你的github仓库的SSH部分的内容，然后粘贴到配置文件中，保存退出。<br>⚠️<span style="color:red">注意：！！！</span>在vim编辑时，要注意分号后需要有空格，不然会报错。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/github3.jpg","alt":"","title":""}]</div>  </div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/vim5.jpg","alt":"","title":""}]</div>  </div><p>提醒：这里补充说明一下为什么选择SSH而不选择HTTPS，因为HTTPS是需要输入用户名和密码的，而SSH是不需要的，所以我们选择SSH，我们每次对hexo的配置文件进行修改的时候，都不需要输入用户名和密码，直接hexo d即可部署到远端。</p><h3 id="SSH配置"><a href="#SSH配置" class="headerlink" title="SSH配置"></a>SSH配置</h3><h4 id="设置git"><a href="#设置git" class="headerlink" title="设置git"></a>设置git</h4><p>接下来需要让git知道你是谁，所以终端输入下面命令。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;username&quot;</span> <span class="comment"># “username”换成你的github用户名</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;email&quot;</span> <span class="comment"># “email”换成你的github邮箱</span></span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/git2.jpg","alt":"","title":""}]</div>  </div><h4 id="github-ssh密钥配置"><a href="#github-ssh密钥配置" class="headerlink" title="github ssh密钥配置"></a>github ssh密钥配置</h4><p>第一步： 上面我们告诉git我们的身份了，接下来检查一下是否配置了ssh密钥。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh <span class="comment"># 进入.ssh文件夹</span></span><br><span class="line">$ <span class="built_in">ls</span> <span class="comment"># 列出.ssh文件夹下的文件</span></span><br></pre></td></tr></table></figure><p>如果列出的文件中有id_rsa和id_rsa.pub，那么说明已经配置了ssh密钥，没有则重新创建新的即可。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ssh.jpg","alt":"","title":""}]</div>  </div><p>创建新的ssh密钥方法</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;email&quot;</span> <span class="comment"># “email”换成你的github邮箱</span></span><br></pre></td></tr></table></figure><p>然后在终端进入.ssh文件夹，并输入ls会发现有新生成的id_rsa和id_rsa.pub文件，这就是我们的ssh密钥。<br><span style="color:red">说明：</span>id_rsa是私钥，id_rsa.pub是公钥，我们要把id_rsa.pub内容添加到github上，才能部署到github上。<br>第二步： 基于我们成功配置ssh密钥的情况，我们需要添加SSH的Key到github，获取公钥内容。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> ~/.ssh/id_rsa.pub <span class="comment"># 获取公钥内容</span></span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ssh2.jpg","alt":"","title":""}]</div>  </div><p>第三步： 将公钥内容添加到github仓库。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ssh3.jpg","alt":"","title":""}]</div>  </div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ssh4.jpg","alt":"","title":""}]</div>  </div><p>第四步： 验证是否配置成功，用私有密钥与Github进行交互验证。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github .com <span class="comment"># 验证是否配置成功，用私有密钥与Github进行交互验证</span></span><br></pre></td></tr></table></figure><p>终端输出“Hi 用户名! You’ve successfully authenticated, but GitHub does not provide shell access”表明你配置成功了。</p><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"/img/hexo-tutorial/ssh5.jpg","alt":"","title":""}]</div>  </div><h3 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h3><p>完成上述操作后，我们就可以部署到github了。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d <span class="comment"># 部署到github</span></span><br></pre></td></tr></table></figure><p>然后你可以查看你的github仓库，会发现多了很多文件，说明成功了。这时，你就可以用仓库名来访问你的博客了。<br>这只是最初的搭建，页面布局比较简单，后面会讲到如何添加主题，以及其他的东西，后面的文章会介绍Hexo的主题使用，以及其他方面关于Hexo的使用，大家可以关注一下。<br>如果大家搭建过程遇到问题，可以发邮箱📮或者评论区留言。</p>]]></content>
    
    
    <summary type="html">Hexo+Github个人网站搭建保姆级教程（Mac）</summary>
    
    
    
    <category term="hexo" scheme="https://www.simon-zj.top/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Gallery</title>
    <link href="https://www.simon-zj.top/posts/de374c34"/>
    <id>https://www.simon-zj.top/posts/de374c34</id>
    <published>2025-04-23T14:12:12.000Z</published>
    <updated>2025-05-16T07:16:32.831Z</updated>
    
    <content type="html"><![CDATA[<div class="gallery-group-main"><figure class="gallery-group">    <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">    <figcaption>      <div class="gallery-group-name">壁纸</div>      <p>收藏的一些壁纸</p>      <a href='/gallery/wallpaper'></a>    </figcaption>  </figure><figure class="gallery-group">    <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">    <figcaption>      <div class="gallery-group-name">漫威</div>      <p>关于漫威的图片</p>      <a href='/gallery/marvel'></a>    </figcaption>  </figure></div>]]></content>
    
    
    <summary type="html">Share some high quality images</summary>
    
    
    
    <category term="gallery" scheme="https://www.simon-zj.top/categories/gallery/"/>
    
    
  </entry>
  
</feed>
